<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="generate.ReplyDao">
  <resultMap id="BaseResultMap" type="generate.Reply">
    <id column="replyId" jdbcType="INTEGER" property="replyid" />
    <result column="commentId" jdbcType="INTEGER" property="commentid" />
    <result column="replyToId" jdbcType="INTEGER" property="replytoid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="commentDate" jdbcType="DATE" property="commentdate" />
    <result column="likeCount" jdbcType="INTEGER" property="likecount" />
  </resultMap>
  <sql id="Base_Column_List">
    replyId, commentId, replyToId, userId, content, commentDate, likeCount
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reply
    where replyId = #{replyid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reply
    where replyId = #{replyid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="replyId" keyProperty="replyid" parameterType="generate.Reply" useGeneratedKeys="true">
    insert into reply (commentId, replyToId, userId, 
      content, commentDate, likeCount
      )
    values (#{commentid,jdbcType=INTEGER}, #{replytoid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{commentdate,jdbcType=DATE}, #{likecount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="replyId" keyProperty="replyid" parameterType="generate.Reply" useGeneratedKeys="true">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentid != null">
        commentId,
      </if>
      <if test="replytoid != null">
        replyToId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="commentdate != null">
        commentDate,
      </if>
      <if test="likecount != null">
        likeCount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentid != null">
        #{commentid,jdbcType=INTEGER},
      </if>
      <if test="replytoid != null">
        #{replytoid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="commentdate != null">
        #{commentdate,jdbcType=DATE},
      </if>
      <if test="likecount != null">
        #{likecount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="generate.Reply">
    update reply
    <set>
      <if test="commentid != null">
        commentId = #{commentid,jdbcType=INTEGER},
      </if>
      <if test="replytoid != null">
        replyToId = #{replytoid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="commentdate != null">
        commentDate = #{commentdate,jdbcType=DATE},
      </if>
      <if test="likecount != null">
        likeCount = #{likecount,jdbcType=INTEGER},
      </if>
    </set>
    where replyId = #{replyid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="generate.Reply">
    update reply
    set commentId = #{commentid,jdbcType=INTEGER},
      replyToId = #{replytoid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      commentDate = #{commentdate,jdbcType=DATE},
      likeCount = #{likecount,jdbcType=INTEGER}
    where replyId = #{replyid,jdbcType=INTEGER}
  </update>
</mapper>